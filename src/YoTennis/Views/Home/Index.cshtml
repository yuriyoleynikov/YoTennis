@model ContainerForMatchModel

@{
    ViewData["Title"] = "Home Page";
}

<p><a asp-action="Create" asp-controller="Match" class="btn btn-default btn-lg">Create Match</a></p>
<div class="game-commands">
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Players
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Score
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var match in Model.ListMatchModelView)
                {
                    <tr>
                        <td>
                            @if (match.State.State != MatchState.Completed)
                            {
                                @Html.DisplayFor(modelMatch => match.Players)
                            }
                            else
                            {
                                @if (match.State.MatchScore.FirstPlayer > match.State.MatchScore.SecondPlayer)
                                {
                                    <div>
                                        <b>@match.State.FirstPlayer</b> -
                                        @match.State.SecondPlayer
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        @match.State.FirstPlayer -
                                        <b>@match.State.SecondPlayer</b>
                                    </div>
                                }

                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelMatch => match.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelMatch => match.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelMatch => match.Score)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Index", "Match", new { id = match.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = match.Id }) |
                            @Html.ActionLink("Delete", "Delete", "Home", new
                       {
                           id = match.Id,
                           returnUrl = Url.Action("Index", "Home",
new
{
    count = Model.Count,
    skip = Model.Skip
})
                       })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="my-margin-left">
        <p>Filter</p>
        <p>Players:</p>
        <ul>
            @if (Model.SelectedPlayers.Any())
            {
                if (Model.SelectedPlayers.Count() == 1)
                {
                    <li>@Html.ActionLink("Clear", "Index", "Home", new { count = Model.Count, skip = 0 })</li>
                }
                else
                {
                    <li>@Html.ActionLink("Clear all", "Index", "Home", new { count = Model.Count, skip = 0 })</li>
                }
            }
            @foreach (var player in Model.FilterPayers)
            {
                var selectedPlayers = Model.SelectedPlayers.ToList();
                if (selectedPlayers.Contains(player))
                {
                    selectedPlayers.Remove(player);
                }
                else
                {
                    selectedPlayers.Add(player);
                }

                if (!Model.SelectedPlayers.Any())
                {
                    <li>@Html.ActionLink(player, "Index", "Home", new { count = Model.Count, skip = 0, player = selectedPlayers })</li>
                }
                else
                {
                    if (Model.SelectedPlayers.Contains(player))
                    {
                        <li>@player (@Html.ActionLink("Remove", "Index", "Home", new { count = Model.Count, skip = 0, player = selectedPlayers }))</li>
                    }
                    else
                    {
                        <li>
                            @Html.ActionLink(player, "Index", "Home", new { count = Model.Count, skip = 0, player = player })
                            (@Html.ActionLink("Add", "Index", "Home", new { count = Model.Count, skip = 0, player = selectedPlayers }))
                        </li>
                    }
                }
            }
        </ul>
        <p>Current Status:</p>
        <ul>
            @foreach (var state in Model.FilterState)
            {
                var selectedState = Model.SelectedState.ToList();
                if (selectedState.Contains(state))
                {
                    selectedState.Remove(state);
                }
                else
                {
                    selectedState.Add(state);
                }

                if (!Model.SelectedState.Any())
                {
                    <li>
                        @Html.ActionLink(state.ToString(), "Index", "Home",
                            new { count = Model.Count, skip = 0, player = Model.SelectedPlayers, state = selectedState })
                    </li>
                }
                else
                {
                    if (Model.SelectedState.Contains(state))
                    {
                        <li>@state.ToString() 
                            (@Html.ActionLink("Remove", "Index", "Home",
                           new { count = Model.Count, skip = 0, player = Model.SelectedPlayers, state = selectedState }))</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink(state.ToString(), "Index", "Home",
                           new { count = Model.Count, skip = 0, player = Model.SelectedPlayers, state = state })</li>
                    }
                }
            }
        </ul>
        <p>Beginning with:</p>
        <p>Finishing before:</p>
    </div>

</div>
<div>
    <p>
        Show -
        @Html.ActionLink("10", "Index", "Home", new { count = 10, skip = 0, player = Model.SelectedPlayers }) |
        @Html.ActionLink("20", "Index", "Home", new { count = 20, skip = 0, player = Model.SelectedPlayers }) |
        @Html.ActionLink("All", "Index", "Home", new { count = Model.TotalCount != 0 ? Model.TotalCount : 10, skip = 0, player = Model.SelectedPlayers })
    </p>

    @if (Model.Count != Model.TotalCount)
    {
        <p>
            Page
            @if (Model.Skip != 0)
                {
                @Html.ActionLink("<", "Index", "Home", new { count = Model.Count, skip = Model.Skip - Model.Count, player = Model.SelectedPlayers })
            }
            @{
                int currentPage = Model.Skip == 0 ? 1 : Model.Skip / Model.Count + 1;
            }
            @currentPage
            @if (Model.Skip + Model.Count < Model.TotalCount)
                {
                @Html.ActionLink(">", "Index", "Home", new { count = Model.Count, skip = Model.Skip + Model.Count, player = Model.SelectedPlayers })
            }
        </p>
                }
    <p>@Model.TotalCount Matches in system</p>
</div>


